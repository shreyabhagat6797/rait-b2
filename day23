â€¢	Stack : Stacks are linear Data Structures 
          which are based on the principle of Last-In-First-Out (LIFO) where data which is entered last will be the first to get accessed.

class Stack:
    def __init__(self,max_size):
        self.__max_size=max_size
        self.__elements=[None]*max_size
        self.__top=-1

    def get_max_size(self):
        return self.__max_size

    def full(self):
        if self.__top==self.__max_size-1:
            return True
        else:
            return False

    def push(self,data):
        if self.full():
            print("overflow")
        else:
            self.__top+=1
            self.__elements[self.__top]=data

    def empty(self):
        if self.__top==-1:
            return True
        else:
            return False

    def pop(self):
        if self.empty():
            print("underflow")
        else:
            data=self.__elements[self.__top]
            self.__top-=1

    def display(self):
        if self.empty():
            print("the stack is empty")
        else:
            index=self.__top
            while(index>=0):
                print(self.__elements[index])
                index-=1

s=Stack(5)
s.push("a")
s.push("b")
s.display()
s.pop()
s.display()
