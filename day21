'''
Apparel oop A4
'''

class Apparel:
    counter=100
    def __init__(self,price,item_type):
        self.__item_type=item_type
        self.__price=price
        self.__item_id=item_type[0].upper()+str(Apparel.counter+1)
        Apparel.counter+=1

    def set_price(self,price):
        self.__price=price

    def get_price(self):
        return self.__price

    def get_item_type(self):
        return self.__item_type

    def get_item_id(self):
        return self.__item_id

    def calculate_price(self):
        self.__price*=1.05

class Cotton(Apparel):
    def __init__(self,price,discount):
        self.__discount=discount
        Apparel.__init__(self,price,"Cotton")  #invoking parent constructor

    def get_discount(self):
        return self.__discount

    def calculate_price(self):
        Apparel.calculate_price(self)
        price=Apparel.get_price(self)
        price*=(1-((self.__discount)/100))
        price*=1.05
        Apparel.set_price(self,price)
        return price

class Silk(Apparel):
    def __init__(self,price):
        self.__points=0
        Apparel.__init__(self,price,"Silk")

    def get_points(self):
        return self.__points

    def calculate_price(self):
        Apparel.calculate_price(self)
        price=Apparel.get_price(self)
        if price>10000:
            self.__points+=10
        else:
            self.__points+=3
        price*=1.10
        Apparel.set_price(self,price)
        return price
        
c=Cotton(1320,35)
s=Silk(1320)
print(c.calculate_price())
print(s.calculate_price())
print(s.get_points())
